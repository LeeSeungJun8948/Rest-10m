<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rest.app.mat.service.impl.MaterialMapper">

<!-- 


	참고를 위함이면 이거보다 inorderForm.jsp, matInForm.jsp 를 보기를 권장함



 -->
	<select id="getMatList" resultType="MatVO">
		SELECT m.material_code, m.material_name, cm.code_nm as mat_nm
		FROM material m LEFT JOIN COMTCCMMNDETAILCODE cm
		ON m.mat_id = cm.code_id and m.mat_no = cm.code
	</select>
	
	<select id="getMatInfo" resultType="MatVO" parameterType="MatVO">
		SELECT m.material_code, m.material_name, cm.code_nm as mat_nm, m.company_code, c.company_name, unit_id, unit_no, save_stock, min_stock, max_stock, month_stock 
		FROM material m LEFT JOIN company c 
		ON m.company_Code = c.company_Code
		LEFT JOIN COMTCCMMNDETAILCODE cm
		ON m.mat_no = cm.code and m.mat_id = cm.code_id
		WHERE m.material_code = #{materialCode}
	</select>
	
	<select id="saveMat" parameterType="MatVO" resultType="int">
		SELECT count(*) 
		FROM material 
		WHERE material_code = #{materialCode}
	</select>
	
	<update id="udtMat" parameterType="MatVO">
		UPDATE material 
		SET material_name = #{materialName}, unit_no = #{unitNo}, company_code =  #{companyCode}
		, MIN_STOCK =  #{minStock} , MAX_STOCK =  #{maxStock}, SAVE_STOCK =  #{saveStock}, MONTH_STOCK =  #{monthStock}
		WHERE material_code = #{materialCode}
	</update>
	
	<!-- 새 자재를 추가할때 code 값 불러오기 -->
	<select id="newMatCode" resultType="MatVO">
		SELECT max(material_code) + 1 as  material_code
		FROM material 
	</select>
	
	<insert id="istMat" parameterType="MatVO" >
		insert into material(material_code, material_name, company_code, unit_id, unit_no, mat_id, mat_no, save_stock, min_stock, max_stock, month_stock)
		values(#{materialCode}, #{materialName}, #{companyCode}, 'R_UNIT', #{unitNo}, 'R_MAT', #{matNm}, #{saveStock}, #{minStock}, #{maxStock},  #{monthStock})
	</insert>
	
	<delete id="matDel" parameterType="MatVO">
		DELETE FROM material
		WHERE material_code = #{materialCode}
	</delete>
	
	<!-- 발주 -->
	<select id="getInorderList" resultType="InorderVO"  parameterType="InorderVO">
	
		SELECT inorder_code, inorder_date, material_code, 
			f_findMatName(material_code) as material_name,
			f_findCompName(company_code) as company_name,
			(select max(io_date) from inout where inorder_code = inorder.inorder_code) as in_date,
			inorder_count,
			nvl((select sum(io_volume) from inout where inorder_code = inorder.inorder_code),0) as in_count,
			inorder_count - nvl((select sum(io_volume) from inout where inorder_code = inorder.inorder_code),0) as yet_count,
			comments
			
		FROM inorder
		
		
		<where>
			<![CDATA[ 
			( trunc(inorder_date) >= trunc(#{startDate}) AND trunc(inorder_date) <= trunc(#{endDate}) )
			]]> 
			<if test="companyCode != null and companyCode != ''">
				AND company_code = #{companyCode}
			</if>	
	
			<if test="materialCode != null and materialCode != ''">
				AND material_code = #{materialCode}
			</if>	

		</where>
			
		<if test="sort != null and sort != ''">
			ORDER BY ${sort} 
			<if test='sort.equals("inorder_date")'>
				desc
			</if>
		</if> 	
		
	</select>
	
	<!-- 입출고/정산입출고 한방에 -->
	<select id="getMatInoutList" resultType="InoutVO"  parameterType="InoutVO">
	
		SELECT io_code, io_date, material_code, F_FINDMATNAME(material_code) as material_name , 
		        (SELECT unit_no FROM material WHERE material_code = inout.material_code) as unit_no,
		        inorder_code, io_volume, unit_price, io_volume * unit_price as price, lot_no,
		        (SELECT stock FROM stock WHERE material_code = inout.material_code) as stock,
        		(SELECT f_findCompName(company_code) FROM inorder WHERE inorder_code = inout.inorder_code) as company_name,
     		  	(SELECT company_code FROM inorder WHERE inorder_code = inout.inorder_code) as company_code
		FROM inout
		
		<where>
			inout_no = #{ioType} and
			<![CDATA[ 
				( trunc(io_date) >= trunc(#{startDate}) AND trunc(io_date) <= trunc(#{endDate}) )
			]]> 
			
			<if test="companyCode != null and companyCode != ''">
				AND (SELECT company_code FROM inorder WHERE inorder_code = inout.inorder_code) = #{companyCode}
			</if>	
	
			<if test="materialCode != null and materialCode != ''">
				AND material_code = #{materialCode}
			</if>	
		</where>
		
		<if test="sort != null and sort != ''">
			ORDER BY ${sort} 
			<if test='sort.equals("io_date")'>
				desc
			</if>	
		</if> 	
	</select>
	
	<!-- 입출고 행을 추가할때 code 값 불러오기 -->
	<select id="getNewIoCode" resultType="InoutVO">
		SELECT max(io_code) + 1  as io_code FROM inout
	</select>
	
	<!-- 입출고 인설트 -->
	<insert id="istInout" parameterType="InoutVO">
		INSERT INTO inout(io_code, io_date, io_volumn, unit_price, material_code, lot_no, inorder_code, inout_id, inout_no) 
		VALUES(#{ioCode}, #{ioDate}, #{ioVolume}, #{unitPrice}, #{materialCode}, #{lotNo}, #{inorderCode}, 'R_INOUT', #{ioType})
	</insert>
	
	<!-- 입출고 업데이트 -->
	<update id="udtInout" parameterType="InoutVO">
		UPDATE inout 
		SET io_date = #{ioDate} AND inorder_code = #{inorderCode} AND io_volumn = #{ioVolumn} AND unit_price = #{unitPrice} 
		WHERE io_code = #{ioCode}
	</update>
	
</mapper>